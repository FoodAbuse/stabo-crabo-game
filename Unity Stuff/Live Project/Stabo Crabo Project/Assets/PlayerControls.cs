//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.3.0
//     from Assets/PlayerControls.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @PlayerControls : IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @PlayerControls()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""PlayerControls"",
    ""maps"": [
        {
            ""name"": ""Gameplay"",
            ""id"": ""80ce8be7-4f5e-4c03-8830-bd5ccf28b9f6"",
            ""actions"": [
                {
                    ""name"": ""Grab"",
                    ""type"": ""Button"",
                    ""id"": ""8498a7be-8fc1-4722-9328-40268927f9ec"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Stab"",
                    ""type"": ""Button"",
                    ""id"": ""3e67514f-180f-4780-b452-86913a6c4d4a"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Sprint"",
                    ""type"": ""Button"",
                    ""id"": ""df04b1f9-758e-4f19-bd5d-92b8e1cdc4a7"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Hints"",
                    ""type"": ""Button"",
                    ""id"": ""d8a6c23b-b33e-4c27-a1f7-dbfee39f1829"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Pause"",
                    ""type"": ""Button"",
                    ""id"": ""a7ea139b-7f95-4561-b4cb-52e989903e02"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Move"",
                    ""type"": ""Value"",
                    ""id"": ""40dfd352-16ae-4e3c-ba28-25c65363fca0"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""UiStart"",
                    ""type"": ""Button"",
                    ""id"": ""1111cd71-e51e-4d27-8c92-141189539f49"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""PivotRight"",
                    ""type"": ""Button"",
                    ""id"": ""0af1080a-16ff-4367-9300-1b3c9a15a2b0"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""PivotLeft"",
                    ""type"": ""Button"",
                    ""id"": ""3e8dbe95-b1d3-48cc-8a19-619c93416329"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""debug"",
                    ""type"": ""PassThrough"",
                    ""id"": ""28095aca-960e-4f5c-a876-3bb4f523f45c"",
                    ""expectedControlType"": ""Axis"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""a254dd80-f936-4623-b4fa-245ea976c92f"",
                    ""path"": ""<Mouse>/leftButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Grab"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""3ca51610-05e1-4c64-8eef-9de6738e1f67"",
                    ""path"": ""<Gamepad>/leftTrigger"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Grab"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""da928c16-ca5e-40e0-a3b0-ea04140ed889"",
                    ""path"": ""<Mouse>/rightButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Stab"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""f5e8aaeb-3bad-4fc6-854c-f40241668649"",
                    ""path"": ""<Gamepad>/rightTrigger"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Stab"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""6a7e94da-9e3b-4d0d-8cbe-2ac76fdb8017"",
                    ""path"": ""<Keyboard>/leftShift"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Sprint"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""1290adff-6d43-410e-bb4b-cdaa3fea0bac"",
                    ""path"": ""<Gamepad>/buttonSouth"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Sprint"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""e9295568-23b7-4a24-87cf-bdd5c60fb4b9"",
                    ""path"": ""<Keyboard>/tab"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Hints"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""40134d23-f77b-4be4-96c4-2c98161a5929"",
                    ""path"": ""<Gamepad>/buttonNorth"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Hints"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""00651506-ffdb-431d-bcd1-a62e9830bf20"",
                    ""path"": ""<Keyboard>/escape"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Pause"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""bee3babd-6d60-4a30-81f4-395d5f048a66"",
                    ""path"": ""<Gamepad>/start"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Pause"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""5bfd7ccf-ce49-4e8c-96c8-0743791037ca"",
                    ""path"": ""<Gamepad>/leftStick"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""2D Vector"",
                    ""id"": ""116dedfc-d6d1-40e0-9693-7c1255411da6"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""1b2afa99-200b-4c02-9d75-3d386e3cc198"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""78a9b2f6-b807-444a-8378-56e3fea1b774"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""347f895e-abc2-4243-bd4a-fd597ad3e687"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""ca9e1172-5713-43f1-9989-b0bedf507946"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""bfd7c78b-da81-4cf3-a864-d8b16a72cd3b"",
                    ""path"": ""<Keyboard>/space"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""UiStart"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""9b97ee04-95af-4b61-b3e3-73d4ea8c010d"",
                    ""path"": ""<Gamepad>/start"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""UiStart"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""c66c11e4-a89b-4fc6-8492-b99f9ec0cdf3"",
                    ""path"": ""<Keyboard>/e"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""PivotRight"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""599a7237-0910-4aff-8617-eec03577e42e"",
                    ""path"": ""<Gamepad>/rightShoulder"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""PivotRight"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""ac6b40e0-4491-4d6b-8b01-7596234f7103"",
                    ""path"": ""<Keyboard>/q"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""PivotLeft"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""1e7dda5d-2f17-4a93-9682-dccd0dc171c2"",
                    ""path"": ""<Gamepad>/leftShoulder"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""PivotLeft"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""cf56f1d8-703f-4643-bec0-23ae06262222"",
                    ""path"": ""<Keyboard>/pageDown"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""debug"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": []
}");
        // Gameplay
        m_Gameplay = asset.FindActionMap("Gameplay", throwIfNotFound: true);
        m_Gameplay_Grab = m_Gameplay.FindAction("Grab", throwIfNotFound: true);
        m_Gameplay_Stab = m_Gameplay.FindAction("Stab", throwIfNotFound: true);
        m_Gameplay_Sprint = m_Gameplay.FindAction("Sprint", throwIfNotFound: true);
        m_Gameplay_Hints = m_Gameplay.FindAction("Hints", throwIfNotFound: true);
        m_Gameplay_Pause = m_Gameplay.FindAction("Pause", throwIfNotFound: true);
        m_Gameplay_Move = m_Gameplay.FindAction("Move", throwIfNotFound: true);
        m_Gameplay_UiStart = m_Gameplay.FindAction("UiStart", throwIfNotFound: true);
        m_Gameplay_PivotRight = m_Gameplay.FindAction("PivotRight", throwIfNotFound: true);
        m_Gameplay_PivotLeft = m_Gameplay.FindAction("PivotLeft", throwIfNotFound: true);
        m_Gameplay_debug = m_Gameplay.FindAction("debug", throwIfNotFound: true);
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }
    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }
    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // Gameplay
    private readonly InputActionMap m_Gameplay;
    private IGameplayActions m_GameplayActionsCallbackInterface;
    private readonly InputAction m_Gameplay_Grab;
    private readonly InputAction m_Gameplay_Stab;
    private readonly InputAction m_Gameplay_Sprint;
    private readonly InputAction m_Gameplay_Hints;
    private readonly InputAction m_Gameplay_Pause;
    private readonly InputAction m_Gameplay_Move;
    private readonly InputAction m_Gameplay_UiStart;
    private readonly InputAction m_Gameplay_PivotRight;
    private readonly InputAction m_Gameplay_PivotLeft;
    private readonly InputAction m_Gameplay_debug;
    public struct GameplayActions
    {
        private @PlayerControls m_Wrapper;
        public GameplayActions(@PlayerControls wrapper) { m_Wrapper = wrapper; }
        public InputAction @Grab => m_Wrapper.m_Gameplay_Grab;
        public InputAction @Stab => m_Wrapper.m_Gameplay_Stab;
        public InputAction @Sprint => m_Wrapper.m_Gameplay_Sprint;
        public InputAction @Hints => m_Wrapper.m_Gameplay_Hints;
        public InputAction @Pause => m_Wrapper.m_Gameplay_Pause;
        public InputAction @Move => m_Wrapper.m_Gameplay_Move;
        public InputAction @UiStart => m_Wrapper.m_Gameplay_UiStart;
        public InputAction @PivotRight => m_Wrapper.m_Gameplay_PivotRight;
        public InputAction @PivotLeft => m_Wrapper.m_Gameplay_PivotLeft;
        public InputAction @debug => m_Wrapper.m_Gameplay_debug;
        public InputActionMap Get() { return m_Wrapper.m_Gameplay; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(GameplayActions set) { return set.Get(); }
        public void SetCallbacks(IGameplayActions instance)
        {
            if (m_Wrapper.m_GameplayActionsCallbackInterface != null)
            {
                @Grab.started -= m_Wrapper.m_GameplayActionsCallbackInterface.OnGrab;
                @Grab.performed -= m_Wrapper.m_GameplayActionsCallbackInterface.OnGrab;
                @Grab.canceled -= m_Wrapper.m_GameplayActionsCallbackInterface.OnGrab;
                @Stab.started -= m_Wrapper.m_GameplayActionsCallbackInterface.OnStab;
                @Stab.performed -= m_Wrapper.m_GameplayActionsCallbackInterface.OnStab;
                @Stab.canceled -= m_Wrapper.m_GameplayActionsCallbackInterface.OnStab;
                @Sprint.started -= m_Wrapper.m_GameplayActionsCallbackInterface.OnSprint;
                @Sprint.performed -= m_Wrapper.m_GameplayActionsCallbackInterface.OnSprint;
                @Sprint.canceled -= m_Wrapper.m_GameplayActionsCallbackInterface.OnSprint;
                @Hints.started -= m_Wrapper.m_GameplayActionsCallbackInterface.OnHints;
                @Hints.performed -= m_Wrapper.m_GameplayActionsCallbackInterface.OnHints;
                @Hints.canceled -= m_Wrapper.m_GameplayActionsCallbackInterface.OnHints;
                @Pause.started -= m_Wrapper.m_GameplayActionsCallbackInterface.OnPause;
                @Pause.performed -= m_Wrapper.m_GameplayActionsCallbackInterface.OnPause;
                @Pause.canceled -= m_Wrapper.m_GameplayActionsCallbackInterface.OnPause;
                @Move.started -= m_Wrapper.m_GameplayActionsCallbackInterface.OnMove;
                @Move.performed -= m_Wrapper.m_GameplayActionsCallbackInterface.OnMove;
                @Move.canceled -= m_Wrapper.m_GameplayActionsCallbackInterface.OnMove;
                @UiStart.started -= m_Wrapper.m_GameplayActionsCallbackInterface.OnUiStart;
                @UiStart.performed -= m_Wrapper.m_GameplayActionsCallbackInterface.OnUiStart;
                @UiStart.canceled -= m_Wrapper.m_GameplayActionsCallbackInterface.OnUiStart;
                @PivotRight.started -= m_Wrapper.m_GameplayActionsCallbackInterface.OnPivotRight;
                @PivotRight.performed -= m_Wrapper.m_GameplayActionsCallbackInterface.OnPivotRight;
                @PivotRight.canceled -= m_Wrapper.m_GameplayActionsCallbackInterface.OnPivotRight;
                @PivotLeft.started -= m_Wrapper.m_GameplayActionsCallbackInterface.OnPivotLeft;
                @PivotLeft.performed -= m_Wrapper.m_GameplayActionsCallbackInterface.OnPivotLeft;
                @PivotLeft.canceled -= m_Wrapper.m_GameplayActionsCallbackInterface.OnPivotLeft;
                @debug.started -= m_Wrapper.m_GameplayActionsCallbackInterface.OnDebug;
                @debug.performed -= m_Wrapper.m_GameplayActionsCallbackInterface.OnDebug;
                @debug.canceled -= m_Wrapper.m_GameplayActionsCallbackInterface.OnDebug;
            }
            m_Wrapper.m_GameplayActionsCallbackInterface = instance;
            if (instance != null)
            {
                @Grab.started += instance.OnGrab;
                @Grab.performed += instance.OnGrab;
                @Grab.canceled += instance.OnGrab;
                @Stab.started += instance.OnStab;
                @Stab.performed += instance.OnStab;
                @Stab.canceled += instance.OnStab;
                @Sprint.started += instance.OnSprint;
                @Sprint.performed += instance.OnSprint;
                @Sprint.canceled += instance.OnSprint;
                @Hints.started += instance.OnHints;
                @Hints.performed += instance.OnHints;
                @Hints.canceled += instance.OnHints;
                @Pause.started += instance.OnPause;
                @Pause.performed += instance.OnPause;
                @Pause.canceled += instance.OnPause;
                @Move.started += instance.OnMove;
                @Move.performed += instance.OnMove;
                @Move.canceled += instance.OnMove;
                @UiStart.started += instance.OnUiStart;
                @UiStart.performed += instance.OnUiStart;
                @UiStart.canceled += instance.OnUiStart;
                @PivotRight.started += instance.OnPivotRight;
                @PivotRight.performed += instance.OnPivotRight;
                @PivotRight.canceled += instance.OnPivotRight;
                @PivotLeft.started += instance.OnPivotLeft;
                @PivotLeft.performed += instance.OnPivotLeft;
                @PivotLeft.canceled += instance.OnPivotLeft;
                @debug.started += instance.OnDebug;
                @debug.performed += instance.OnDebug;
                @debug.canceled += instance.OnDebug;
            }
        }
    }
    public GameplayActions @Gameplay => new GameplayActions(this);
    public interface IGameplayActions
    {
        void OnGrab(InputAction.CallbackContext context);
        void OnStab(InputAction.CallbackContext context);
        void OnSprint(InputAction.CallbackContext context);
        void OnHints(InputAction.CallbackContext context);
        void OnPause(InputAction.CallbackContext context);
        void OnMove(InputAction.CallbackContext context);
        void OnUiStart(InputAction.CallbackContext context);
        void OnPivotRight(InputAction.CallbackContext context);
        void OnPivotLeft(InputAction.CallbackContext context);
        void OnDebug(InputAction.CallbackContext context);
    }
}
